//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class testWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(test), typeof(System.Object));
		L.RegFunction("TestForLua", TestForLua);
		L.RegFunction("New", _Createtest);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _Createtest(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				test obj = new test(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: test.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TestForLua(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			test obj = (test)ToLua.CheckObject<test>(L, 1);
			obj.TestForLua();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

